/* ----------------------Seccion de declaraciones package e imports--------------------*/

import java_cup.runtime.*;

/* ----------------------Seccion componentes de codigo de usuario --------------------*/

/* Parser Code para cambiar la manera en la que el analizador informa de errores 
   (incluye el número de línea y columna del error). */

parser code {:
    
    /* Cambia el método report_error de manera que se mostrará la línea y
       columna de la entrada donde ocurre el error así como la
       razón del error que es pasada al método en el
       String 'message'. */

    public void report_error(String message, Object info) {
   
        /* Crea un StringBuffer llamado 'm' con el string 'Error' en él. */

        StringBuffer m = new StringBuffer("Error");
   
        /* Chequea si la información pasada al método es del mismo
           tipo que el tipo java_cup.runtime.Symbol. */

        if (info instanceof java_cup.runtime.Symbol) {

            /* Declara un objeto 's' del tipo java_cup.runtime.Symbol con la
               información que hay en el objeto info que está siendo convertido
               como un objeto java_cup.runtime.Symbol. */
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
   
            /* Chequea si el número de línea en la entrada es mayor o
               igual que cero. */
            if (s.left >= 0) {                
                /* Añade al final del mensaje de error StringBuffer
                   el número de línea del error en la entrada. */
                m.append(" en la linea "+(s.left+1));   
                /* Chequea si el número de columna en la entrada es mayor
                   o igual que cero. */
                if (s.right >= 0)                    
                    /* Añade al final del mensaje de error StringBuffer
                       el número de columna del error en la entrada. */
                    m.append(", columna "+(s.right+1));
            }
        }
   
        /* Añade al final del mensaje de error StringBuffer creado en
           este método el mensaje que fue pasado a este método. */
        m.append(" : "+message);
   
        /* Imprime los contenidos del StringBuffer 'm', que contiene
           el mensaje de error. */
        System.err.println(m);
    }
   
    /* Cambia el método report_fatal_error de manera que cuando se informa
       de un error fatal se mostrará el número de línea y columna donde el
       fatal error ha ocurrido en la entrada así como la razón del error 
       fatal que es pasado al método en el objeto 'message' y entonces sale.*/
    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }
:};


/* ------------Declaracion de la lista de simbolos de la gramatica-----------*/

terminal a, b, c, d;
non terminal S, C, D, B;


/* -------------Declaracion de precedencias -----------*/



/* --------------Declaracion de la gramatica -----------*/

S      ::= C D B;
C      ::= c C |
           d ;
D      ::= a D b | a b     
              | error 
                {: parser.report_error("Error en la sintaxis, en la parte a^nb^n",null); :};
B      ::= d;
